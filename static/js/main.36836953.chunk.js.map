{"version":3,"sources":["components/layout/nav.tsx","components/layout/teaser.tsx","components/layout/secContainer.tsx","components/layout/footer.tsx","components/pages/home.tsx","components/layout/aniTxtCard.tsx","components/pages/gallery.tsx","components/layout/sideMenu.tsx","components/layout/content-block.tsx","components/layout/figWithCap.tsx","components/layout/figLayout.tsx","components/pages/tutorial.tsx","components/layout/figTxtCard.tsx","components/layout/peopleList.tsx","components/pages/about.tsx","components/pages/galleryDetail.tsx","components/router.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/img/UIComponent.png","assets/img/logo.png","assets/img/feature1.png","assets/img/feature2.png","assets/img/feature3.png","assets/img/kf_illus.gif","assets/img/kf_illus.png","assets/img/kfGroup.png","assets/img/icons.png","assets/img/kf_relation.png","assets/img/kfgroup_relation.png","assets/img/kf_align.png","assets/img/nav.png","assets/img/selection.png","assets/img/suggestion.png","assets/img/kf_suggestion.png","assets/img/bind_kf_timing.png","assets/img/adjust_timing.png","assets/img/bind_kfg_timing.png"],"names":["Nav","menuList","map","tab","idx","key","className","props","activeTab","href","src","logoPng","alt","onClick","window","location","React","Component","Teaser","title","SectionItem","style","backgroundImage","this","imgPath","content","SecContainer","type","ROW_SEC","items","itemProp","COL_SEC","imgs","img","Footer","Home","section1","feature1Png","feature2Png","feature3Png","section2","tmpImg","AniTxtCard","state","isPaused","defaultOptions","loop","autoplay","animationData","lottie","rendererSettings","preserveAspectRatio","onMouseEnter","console","log","setState","onMouseLeave","cName","options","height","width","Gallery","to","mushroomLottie","SideMenu","generateSubMenu","subMenuItems","level","Array","e","divId","targetTop","document","getElementById","offsetTop","scrollTo","top","behavior","handleClick","link","menuContent","ContentBlock","titleComp","id","blockContent","tmpContent","para","li","itemIdx","length","listStyleType","FigWithCap","capContent","cap","tmpPara","FigLayout","Tutorial","overviewBlock","visLangBlock","kfBlock","kfIllusBlock","kfIllusGif","kfIllusBlock2","kfIllusPng","kfgBlock","kfgIllusBlock","kfgIllusPng","symbolBlock","symbolBlock2","symbolPng","rTimingBlock","kfTimingBlock","kfTimingBlock2","kfTimingPng","kfgTimingBlock","kfgTimingBlock2","kfgTimingPng","aniunitTimingBlock","aniunitTimingBlock2","aniunitTimingPng","uiBlock","uiBlock2","uiPng","authorAniBlock","importBlock","chartPrepBlock","loadBlock","loadBlock2","loadPng","selectBlock","selectToolBlock","selectToolPng","selectToolBlock2","selSugBlock","selSugBlock2","selSugPng","seqBlock","seqBlock2","seqPng","aniBlock","timingToKfBlock","timingToKfBlock2","bindKfTimingPng","timingToKfBlock3","adjustKfTimingPng","timingToKfgBlock","timingToKfgBlock2","bindKfgTimingPng","FigTxtCard","imgCls","PeopleList","pList","peopleInfos","pProps","About","GalleryDetail","match","params","name","BasicRoute","exact","path","component","App","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.36836953.chunk.js","sourcesContent":["import '../../assets/style/nav.scss'\r\nimport logoPng from '../../assets/img/logo.png'\r\nimport React from 'react'\r\n\r\ninterface INavProps {\r\n    activeTab: string\r\n}\r\ninterface IState { }\r\n\r\nexport default class Nav extends React.Component<INavProps, IState> {\r\n    render() {\r\n        let menuTabs: string[] = ['home', 'gallery', 'tutorial', 'about'];\r\n        const menuList = menuTabs.map((tab: string, idx: number) => {\r\n            if (idx === 0) {\r\n                return (\r\n                    <li key={idx} className={this.props.activeTab === tab ? 'active-item' : ''}>\r\n                        <a href='#/'>{tab}</a>\r\n                    </li>\r\n                );\r\n            } else {\r\n                return (\r\n                    <li key={idx} className={this.props.activeTab === tab ? 'active-item' : ''}>\r\n                        <a href={`#/${tab}`}>{tab}</a>\r\n                    </li>\r\n                )\r\n            }\r\n        })\r\n        function toSystem() {\r\n            window.location.href = 'https://chartanimation.github.io/cast/system/';\r\n        }\r\n        return (\r\n            <header>\r\n                <img className='logo' src={logoPng} alt='' />\r\n                <div className='menu-container'>\r\n                    <button className='launchBtn'\r\n                        onClick={toSystem}>Launch</button>\r\n                    <ul className='menu'>\r\n                        {menuList}\r\n                    </ul>\r\n\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}","import '../../assets/style/teaser.scss'\r\nimport React from 'react'\r\n\r\nexport default class Teaser extends React.Component {\r\n    render() {\r\n        // const title: string = 'CAST - Canis Studio XXX';\r\n        const title: JSX.Element = <h2>CAST - Canis Studio</h2>;\r\n        const teaserCap: string = `CAST provides an easy access to authoring expressive chart animations especially for people\r\n                                    who lacks programming skills. It represents the animation with the means of an intuitive visual language. \r\n                                    And by interactively editing the visual elements, the designer can alter the animation properties. \r\n                                    Under the keyframe-based authoring paradigm, CAST enables the designer to create animations in three steps: \r\n                                    keyframe construction, keyframe sequencing and keyframe properties specification. Meanwhile, in order to \r\n                                    improve the efficiency and rationality of the result animations, CAST also proposed suggestion strategies in\r\n                                    keyframe construction and sequencing`\r\n        function toSystem() {\r\n            window.location.href = 'https://chartanimation.github.io/cast/system/';\r\n        }\r\n        return (\r\n            <div className='teaser'>\r\n                <div className='teaser-text-container'>\r\n                    {/* <h2>{title}</h2> */}\r\n                    {title}\r\n                    <p>{teaserCap}</p>\r\n                    <button className='launchBtn' onClick={toSystem}>CREATE YOUR ANIMATION</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import '../../assets/style/sec-container.scss'\r\nimport React from 'react'\r\n\r\nexport interface ISecItemProps {\r\n    imgPath: any\r\n    title: string\r\n    content: string\r\n}\r\n\r\nexport class SectionItem extends React.Component<ISecItemProps>{\r\n    render() {\r\n        return (\r\n            <div className='sub-feature-inner-container'>\r\n                <div className='split'></div>\r\n                <div className='img-div' style={{ backgroundImage: 'url(' + this.props.imgPath + ')' }}></div>\r\n                {/* <img src={this.props.imgPath} alt='' /> */}\r\n                <h5>{this.props.title}</h5>\r\n                <p>{this.props.content}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport interface ISecProps {\r\n    type: string\r\n    title?: string\r\n    content?: string\r\n    img?: any[]\r\n    items?: ISecItemProps[]\r\n}\r\n\r\nexport default class SecContainer extends React.Component<ISecProps> {\r\n    static ROW_SEC: string = 'row_sec';\r\n    static COL_SEC: string = 'col_sec';\r\n\r\n    render() {\r\n        switch (this.props.type) {\r\n            case SecContainer.ROW_SEC:\r\n                const items: JSX.Element[] | undefined = this.props.items?.map((itemProp: ISecItemProps) => {\r\n                    return <SectionItem imgPath={itemProp.imgPath} title={itemProp.title} content={itemProp.content} />\r\n                })\r\n                return (\r\n                    <div className='feature-container'>\r\n                        <div className='feature-inner-container-row'>\r\n                            {items}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            case SecContainer.COL_SEC:\r\n                const imgs: JSX.Element[] | undefined = this.props.img?.map((imgPath: any) => <img src={imgPath} alt='' />)\r\n                return (\r\n                    <div className='feature-container'>\r\n                        <div className='split'></div><br></br>\r\n                        <h4>{this.props.title}</h4>\r\n                        <div className='feature-inner-container-col'>\r\n                            <div className='feature-text'>\r\n                                <p>{this.props.content}</p>\r\n                            </div>\r\n                            <div className='feature-illus'>\r\n                                {imgs}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","import '../../assets/style/footer.scss'\r\nimport React from 'react'\r\n\r\nexport default class Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <div className='footer-content'>\r\n                    <span><a href='#'>Contact us</a></span> | <span>© copyright</span>\r\n                </div>\r\n            </footer>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport Nav from '../layout/nav'\r\nimport Teaser from '../layout/teaser'\r\nimport SecContainer, { ISecProps } from '../layout/secContainer'\r\nimport Footer from '../layout/footer'\r\n\r\nimport tmpImg from '../../assets/img/UIComponent.png';\r\nimport tmpImg2 from '../../assets/img/logo.png';\r\nimport feature1Png from '../../assets/img/feature1.png';\r\nimport feature2Png from '../../assets/img/feature2.png';\r\nimport feature3Png from '../../assets/img/feature3.png';\r\n\r\nexport default class Home extends React.Component {\r\n    render() {\r\n        const section1: ISecProps = {\r\n            type: SecContainer.ROW_SEC,\r\n            items: [\r\n                {\r\n                    title: 'Explicit Visual language',\r\n                    content: 'CAST uses a visual language which can explicitly describe the chart animation process.',\r\n                    imgPath: feature1Png\r\n                }, {\r\n                    title: 'No Textual Programming',\r\n                    content: 'CAST avoids textual coding by providing intuitive interactions over the visual language to specify chart animations.',\r\n                    imgPath: feature2Png\r\n                }, {\r\n                    title: 'feature 3',\r\n                    content: 'Canis decouples specification from implementation and enables concise, high-level specifications of expressive chart animations.',\r\n                    imgPath: feature3Png\r\n                }\r\n            ]\r\n        }\r\n        const section2: ISecProps = {\r\n            type: SecContainer.COL_SEC,\r\n            title: 'FEATURE FEATURE 1',\r\n            content: 'Canis decouples specification from implementation and enables concise, high-level specifications of expressive chart animations.',\r\n            img: [tmpImg]\r\n        }\r\n        return (\r\n            <div>\r\n                <Nav activeTab='home' />\r\n                <div className='container'>\r\n                    <Teaser />\r\n                    <SecContainer type={section1.type} items={section1.items} />\r\n                    <SecContainer type={section2.type} title={section2.title} content={section2.content} img={section2.img} />\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}","import '../../assets/style/ani-txt-card.scss'\r\n\r\nimport React from 'react'\r\nimport Lottie from 'react-lottie'\r\n\r\ninterface IAniTxtCardProps {\r\n    cName: string\r\n    lottie: any\r\n}\r\n\r\ninterface IAniTxtCardState {\r\n    isPaused: boolean\r\n}\r\n\r\nexport default class AniTxtCard extends React.Component<IAniTxtCardProps, IAniTxtCardState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { isPaused: false }\r\n    }\r\n    render() {\r\n        const mouseenterItem = () => {\r\n            console.log('mouseover');\r\n            this.setState({ isPaused: false })\r\n        }\r\n        const mouseleaveItem = () => {\r\n            console.log('mouseout');\r\n            this.setState({ isPaused: true })\r\n        }\r\n        const defaultOptions = {\r\n            loop: true,\r\n            autoplay: false,\r\n            animationData: this.props.lottie,\r\n            rendererSettings: {\r\n                preserveAspectRatio: 'xMidYMid slice'\r\n            }\r\n        };\r\n        return (\r\n            <div className='rect-ani-card' onMouseEnter={mouseenterItem} onMouseLeave={mouseleaveItem}>\r\n                <div className={`card-img ${this.props.cName}`}>\r\n                    <Lottie options={defaultOptions}\r\n                        height={140}\r\n                        width={210}\r\n                        isPaused={this.state.isPaused} />\r\n                </div>\r\n                <div className='card-text'>\r\n                    <span>Doughnut Purchases</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import '../../assets/style/gallery.scss'\r\n\r\nimport React from 'react'\r\nimport Nav from '../layout/nav'\r\nimport AniTxtCard from '../layout/aniTxtCard'\r\nimport Footer from '../layout/footer'\r\n\r\nimport mushroomLottie from '../../assets/img/gallery/mushroom.json';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class Gallery extends React.Component {\r\n    render() {\r\n        const mushroomLink: any = {\r\n            pathname: '/gallery-detail',\r\n            name: 'mushroom'\r\n        }\r\n        return (\r\n            <div>\r\n                <Nav activeTab='gallery' />\r\n                <div className='container'>\r\n                    <div className='gallery-list'>\r\n                        <Link to='/gallery-detail/mushroom'><AniTxtCard cName='mushroom' lottie={mushroomLottie} /></Link>\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}","import '../../assets/style/side-menu.scss'\r\nimport React from 'react'\r\n\r\nexport interface ISideItemProps {\r\n    content: string\r\n    link: string\r\n}\r\n\r\nexport default class SideMenu extends React.Component<{ menuContent: (ISideItemProps[] | ISideItemProps)[] }> {\r\n    render() {\r\n        const scrollToDiv = (divId: string) => {\r\n\r\n\r\n\r\n        }\r\n\r\n        const handleClick = (e: any, divId: string) => {\r\n            let targetTop: number | undefined = document.getElementById(divId)?.offsetTop;\r\n            if (typeof targetTop === 'undefined') {\r\n                targetTop = 0;\r\n            } else {\r\n                targetTop += -100;\r\n            }\r\n            window.scrollTo({\r\n                top: targetTop,\r\n                behavior: \"smooth\"\r\n            })\r\n        }\r\n        const generateSubMenu = (subMenuItems: (ISideItemProps[] | ISideItemProps)[], level: number): JSX.Element => {\r\n            const items: JSX.Element[] = subMenuItems.map((itemProp: ISideItemProps | ISideItemProps[], idx: number) => {\r\n                if (itemProp instanceof Array) {\r\n                    return (\r\n                        <li key={idx} className='nav-item'>\r\n                            {generateSubMenu(itemProp, 1)}\r\n                        </li>\r\n                    );\r\n                } else {\r\n                    return (\r\n                        <li key={idx} className='nav-item'>\r\n                            <a onClick={(e) => { handleClick(e, itemProp.link) }}>{itemProp.content}</a>\r\n                        </li>\r\n                    );\r\n                }\r\n            })\r\n            return (\r\n                <ul className={level === 0 ? 'sidebar-nav' : 'sub-nav'}>\r\n                    {items}\r\n                </ul>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <aside className='sidebar-wrapper'>\r\n                {generateSubMenu(this.props.menuContent, 0)}\r\n            </aside>\r\n        );\r\n    }\r\n}","import React from 'react'\r\n\r\nexport interface IParaProps {\r\n    para: string\r\n    content: string\r\n}\r\n\r\ninterface IListProps {\r\n    type?: string\r\n    items: IParaProps[]\r\n}\r\n\r\nfunction isPara(obj: any): obj is IParaProps {\r\n    return 'para' in obj;\r\n}\r\n\r\n// function isList(obj: any): obj is IListProps {\r\n//     return 'items' in obj;\r\n// }\r\n\r\nexport interface IContentBlockProps {\r\n    title: string\r\n    level: number\r\n    link: string\r\n    content: (string | IParaProps | IListProps)[]\r\n}\r\n\r\nexport default class ContentBlock extends React.Component<IContentBlockProps> {\r\n    render() {\r\n        let titleComp: JSX.Element;\r\n        switch (this.props.level) {\r\n            case 0:\r\n                titleComp = <h1 id={this.props.link}>{this.props.title}</h1>\r\n                break;\r\n            case 1:\r\n                titleComp = <h2 id={this.props.link}>{this.props.title}</h2>\r\n                break;\r\n            case 2:\r\n                titleComp = <h3 id={this.props.link}>{this.props.title}</h3>\r\n                break;\r\n            default:\r\n                titleComp = <h1 id={this.props.link}>{this.props.title}</h1>\r\n                break;\r\n        }\r\n\r\n        const blockContent: JSX.Element[] = this.props.content.map((tmpContent: string | IParaProps | IListProps, idx: number) => {\r\n            if (typeof tmpContent === 'string') {\r\n                return <p key={idx}>{tmpContent}</p>\r\n            } else if (isPara(tmpContent)) {\r\n                return <b key={idx}>{tmpContent.para}</b>\r\n            } else {//generate ul\r\n                const items: JSX.Element[] = tmpContent.items.map((li: IParaProps, itemIdx: number) => <li key={itemIdx}><b>{li.para}</b>{li.para.length > 0 ? ':' : ''} {li.content}</li>)\r\n                if (typeof tmpContent.type !== 'undefined') {\r\n                    return <ol key={idx} style={{ listStyleType: tmpContent.type }}>{items}</ol>\r\n                } else {\r\n                    return <ul key={idx}>{items}</ul>\r\n                }\r\n            }\r\n        })\r\n        return (\r\n            <div>\r\n                {titleComp}\r\n                {blockContent}\r\n            </div>\r\n        )\r\n    }\r\n}","import '../../assets/style/fig-cap.scss'\r\nimport React from 'react'\r\nimport { IParaProps } from './content-block'\r\n\r\nexport interface IFigWithCapProps {\r\n    img: string\r\n    cap: IParaProps[]\r\n}\r\n\r\nexport default class FigWithCap extends React.Component<IFigWithCapProps> {\r\n    render() {\r\n        const capContent: JSX.Element[] = this.props.cap.map((tmpPara: IParaProps, idx: number) => {\r\n            return <p key={idx}><b>{tmpPara.para}</b>: {tmpPara.content}</p>\r\n        })\r\n\r\n        return (\r\n            <div className='fig-cap-container'>\r\n                <div className='figure'>\r\n                    <img src={this.props.img} />\r\n                </div>\r\n                <div className='cap-text'>\r\n                    {capContent}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import '../../assets/style/fig-layout.scss'\r\nimport React from 'react'\r\n\r\nexport interface IFigLayoutProps {\r\n    img: string\r\n}\r\n\r\nexport default class FigLayout extends React.Component<IFigLayoutProps> {\r\n    render() {\r\n        return (\r\n            <div className='single-col-img-container'>\r\n                <img alt='' src={this.props.img} />\r\n            </div>\r\n        )\r\n    }\r\n}","import '../../assets/style/tutorial.scss'\r\n\r\nimport React from 'react'\r\nimport Nav from '../layout/nav'\r\nimport Footer from '../layout/footer'\r\nimport SideMenu, { ISideItemProps } from '../layout/sideMenu'\r\nimport ContentBlock, { IContentBlockProps } from '../layout/content-block'\r\nimport FigWithCap, { IFigWithCapProps } from '../layout/figWithCap'\r\nimport FigLayout, { IFigLayoutProps } from '../layout/figLayout'\r\n\r\nimport kfIllusGif from '../../assets/img/kf_illus.gif'\r\nimport kfIllusPng from '../../assets/img/kf_illus.png'\r\nimport kfgIllusPng from '../../assets/img/kfGroup.png'\r\nimport symbolPng from '../../assets/img/icons.png'\r\nimport kfTimingPng from '../../assets/img/kf_relation.png'\r\nimport kfgTimingPng from '../../assets/img/kfgroup_relation.png'\r\nimport aniunitTimingPng from '../../assets/img/kf_align.png'\r\nimport uiPng from '../../assets/img/UIComponent.png'\r\nimport loadPng from '../../assets/img/nav.png'\r\nimport selectToolPng from '../../assets/img/selection.png'\r\nimport selSugPng from '../../assets/img/suggestion.png'\r\nimport seqPng from '../../assets/img/kf_suggestion.png'\r\nimport bindKfTimingPng from '../../assets/img/bind_kf_timing.png'\r\nimport adjustKfTimingPng from '../../assets/img/adjust_timing.png'\r\nimport bindKfgTimingPng from '../../assets/img/bind_kfg_timing.png'\r\n\r\nexport default class Tutorial extends React.Component {\r\n    render() {\r\n        const overViewTitle: string = 'overview';\r\n        const overViewLink: string = 'overviewLink';\r\n        const visLangTitle: string = 'visual language';\r\n        const visLangLink: string = 'visLangLink';\r\n        const kfTitle: string = 'keyframe';\r\n        const kfLink: string = 'kfLink';\r\n        const kfgTitle: string = 'keyframe group';\r\n        const kfgLink: string = 'kfgLink';\r\n        const symbolTitle: string = 'symbolic representation';\r\n        const symbolLink: string = 'symbolLink';\r\n        const rTimingTitle: string = 'relative timing';\r\n        const rTimingLink: string = 'timingLink';\r\n        const kfTimingTitle: string = 'Relative Timing Between Keyframes';\r\n        const kfTimingLink: string = '';\r\n        const kfgTimingTitle: string = 'Relative Timing Between Keyframe groups';\r\n        const kfgTimingLink: string = '';\r\n        const aniunitTimingTitle: string = 'Relative Timing Between Aniunits';\r\n        const aniunitTimingLink: string = '';\r\n        const uiTitle: string = 'UI components';\r\n        const uiLink: string = 'uiLink';\r\n        const authorAniTitle: string = 'authoring animations';\r\n        const authorAniLink: string = 'authorLink';\r\n        const importTitle: string = 'importing';\r\n        const importLink: string = 'importLink';\r\n        const chartPrepTitle: string = 'Chart Preparation';\r\n        const chartPrepLink: string = '';\r\n        const loadTitle: string = 'Loading';\r\n        const loadLink: string = '';\r\n        const selectTitle: string = 'selecting';\r\n        const selectLink: string = 'selectLink';\r\n        const selectToolTitle: string = 'Selection Tools';\r\n        const selectToolLink: string = '';\r\n        const selSugTitle: string = 'Suggestion Mode';\r\n        const selSugLink: string = '';\r\n        const seqTitle: string = 'sequencing';\r\n        const seqLink: string = 'sequenceLink';\r\n        const aniTitle: string = 'animating';\r\n        const aniLink: string = 'aniLink';\r\n        const timingToKfTitle: string = 'Specifying Timing to Keyframes';\r\n        const timingToKfLink: string = '';\r\n        const timingToKfgTitle: string = 'Specifying Timing to Keyframe Groups';\r\n        const timingToKfgLink: string = '';\r\n\r\n        const menuContent: (ISideItemProps[] | ISideItemProps)[] = [\r\n            {\r\n                content: overViewTitle,\r\n                link: overViewLink\r\n            }, {\r\n                content: visLangTitle,\r\n                link: visLangLink\r\n            }, [\r\n                {\r\n                    content: kfTitle,\r\n                    link: kfLink\r\n                }, {\r\n                    content: kfgTitle,\r\n                    link: kfgLink\r\n                }, {\r\n                    content: symbolTitle,\r\n                    link: symbolLink\r\n                }, {\r\n                    content: rTimingTitle,\r\n                    link: rTimingLink\r\n                }\r\n            ], {\r\n                content: uiTitle,\r\n                link: uiLink\r\n            }, {\r\n                content: authorAniTitle,\r\n                link: authorAniLink\r\n            }, [\r\n                {\r\n                    content: importTitle,\r\n                    link: importLink\r\n                }, {\r\n                    content: selectTitle,\r\n                    link: selectLink\r\n                }, {\r\n                    content: seqTitle,\r\n                    link: seqLink\r\n                }, {\r\n                    content: aniTitle,\r\n                    link: aniLink\r\n                }\r\n            ]\r\n        ]\r\n\r\n        const overviewBlock: IContentBlockProps = {\r\n            title: overViewTitle,\r\n            level: 0,\r\n            link: overViewLink,\r\n            content: ['CAST uses a series of visual representations to describe and generate expressive chart animations.']\r\n        }\r\n        const visLangBlock: IContentBlockProps = {\r\n            title: visLangTitle,\r\n            level: 0,\r\n            link: visLangLink,\r\n            content: ['According to Canis grammar, animations of a chart are composed of a series of aniunits. Each aniunit describes the animation of the selected marks by partitioning them into mark untis then bind each mark unit with timing and animation effects.Thus marks in the same unit should animate together and share the same animation properties(duration, delay, effect, easing)']\r\n        }\r\n        const kfBlock: IContentBlockProps = {\r\n            title: kfTitle,\r\n            level: 1,\r\n            link: kfLink,\r\n            content: ['Chart animations can be represented with a keyframe sequence. For each mark unit, CAST selects the last frame of its animation as the keyframe.As shown in the following example, the animation of the facet dot plots can be represented with a series of frames, and one keyframe for each cell is extracted by CAST to describe this animation.']\r\n        }\r\n        const kfIllusBlock: IFigWithCapProps = {\r\n            img: kfIllusGif,\r\n            cap: [\r\n                {\r\n                    para: 'Chart',\r\n                    content: 'Each dot represents one sample. All dots are grouped by Odor along X axis and grouped by Surface along Y axis.Meanwhile Color encodes whether the sample is Edible.'\r\n                }, {\r\n                    para: 'Animation',\r\n                    content: 'For all dots, animate row by row, and within each row, animate by cell.'\r\n                }\r\n            ]\r\n        }\r\n        const kfIllusBlock2: IFigLayoutProps = {\r\n            img: kfIllusPng\r\n        }\r\n        const kfgBlock: IContentBlockProps = {\r\n            title: kfgTitle,\r\n            level: 1,\r\n            link: kfgLink,\r\n            content: ['The animation is used to convey data patterns. Thus the mark unit is created by gradually grouping all visual marks with data variables.And a hierarchical structure will be generated from this grouping procedure.Taking the previous animation as an example, all the dots are first grouped by Surface, then by Odor.CAST uses frames to represent this grouping hierarchy, and the grey scale of the background color of the frame indicates the depth level of this group.']\r\n        }\r\n        const kfgIllusBlock: IFigLayoutProps = {\r\n            img: kfgIllusPng\r\n        }\r\n        const symbolBlock: IContentBlockProps = {\r\n            title: symbolTitle,\r\n            level: 1,\r\n            link: symbolLink,\r\n            content: [\r\n                'CAST uses the following properties to describe the animation of each mark unit:',\r\n                {\r\n                    items: [\r\n                        {\r\n                            para: 'Duration',\r\n                            content: 'The duration time of the animation. Represented by a blue span with an arrow in the center, the width of the span indicates the length of duration time.'\r\n                        }, {\r\n                            para: 'Delay',\r\n                            content: 'The delay time of the animation of this mark unit. Represneted by an orange span with an arrow in the center, the width indicates the length of delay time.'\r\n                        }, {\r\n                            para: 'Effect',\r\n                            content: 'By which kind of effect this mark unit is animated. Each kind of effect has its corresponding icon.'\r\n                        }, {\r\n                            para: 'Easing',\r\n                            content: 'What easing function this mark unit uses to animate. Each easing function has its corresponding icon.'\r\n                        }\r\n                    ]\r\n                },\r\n                'Note: keyframes within the same group have the same animation properties, thus the effect and easing are shown on group level.'\r\n            ]\r\n        }\r\n        const symbolBlock2: IFigLayoutProps = {\r\n            img: symbolPng\r\n        }\r\n        const rTimingBlock: IContentBlockProps = {\r\n            title: rTimingTitle,\r\n            level: 1,\r\n            link: rTimingLink,\r\n            content: ['Having the visual representation for each mark unit (keyframe) is not enough to represent the animation of the whole chart.We still need to show the relative timing relationships between keyframes and between keyframe groups.']\r\n        }\r\n        const kfTimingBlock: IContentBlockProps = {\r\n            title: kfTimingTitle,\r\n            level: 2,\r\n            link: kfTimingLink,\r\n            content: [\r\n                'Between two keyframes, there could be the following four kinds of relative timing relations: ',\r\n                {\r\n                    items: [\r\n                        {\r\n                            para: 'Start with previous',\r\n                            content: 'The second keyframe starts at the same time with the first one.'\r\n                        }, {\r\n                            para: 'Start with previous + delay',\r\n                            content: 'The second keyframe starts after the \"delay\" time when the first one started.'\r\n                        }, {\r\n                            para: 'Start after previous',\r\n                            content: 'The second keyframe starts right after the first one ends.'\r\n                        }, {\r\n                            para: 'Start after previous + delay',\r\n                            content: 'The second keyframe starts after the \"delay\" time when the first one ended.'\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n        const kfTimingBlock2: IFigLayoutProps = {\r\n            img: kfTimingPng\r\n        }\r\n        const kfgTimingBlock: IContentBlockProps = {\r\n            title: kfgTimingTitle,\r\n            level: 2,\r\n            link: kfgTimingLink,\r\n            content: ['Similar to keyframes, there are also four kinds of relative timing relations between keyframe groups: start with previous, start with previous + delay, start after previous, and start after previous + delay.']\r\n        }\r\n        const kfgTimingBlock2: IFigLayoutProps = {\r\n            img: kfgTimingPng\r\n        }\r\n        const aniunitTimingBlock: IContentBlockProps = {\r\n            title: aniunitTimingTitle,\r\n            level: 2,\r\n            link: aniunitTimingLink,\r\n            content: ['Each aniunit decribes the animation of a series of selected marks. Thus it is represented as a keyframe group as well.The previous example is to align two groups on group level(one group start with/after another). However the relative timing relation between keyframe groups representing aniunits have one more alignment type.Which is to align keyframes within those groups.In order to meet the demand of animating the marks with different shapes but encoded with the same data(e.g. line charts with nodes and labels).As shown in the following example, when one group start after another group and they are aligned on keyframe level, there are two kinds of representations, when they are separated, you can specify animation propeties for each group separatly while they share the same animation properties when they are merged.']\r\n        }\r\n        const aniunitTimingBlock2: IFigLayoutProps = {\r\n            img: aniunitTimingPng\r\n        }\r\n        const uiBlock: IContentBlockProps = {\r\n            title: uiTitle,\r\n            level: 0,\r\n            link: uiLink,\r\n            content: [\r\n                'The user interface of CAST consists of the following components: ',\r\n                {\r\n                    type: 'upper-alpha',\r\n                    items: [\r\n                        {\r\n                            para: 'Data Panel',\r\n                            content: 'Showing the dataset used to generate the chart.'\r\n                        }, {\r\n                            para: 'Chart Panel',\r\n                            content: 'The input chart, which is also for mark selection.'\r\n                        }, {\r\n                            para: 'Animation Specification Panel',\r\n                            content: 'Illustrating and authoring how the chart is animated using static visual representations.'\r\n                        }, {\r\n                            para: 'Animation Preview Panel',\r\n                            content: 'Preview the generated animation.'\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n        const uiBlock2: IFigLayoutProps = {\r\n            img: uiPng\r\n        }\r\n        const authorAniBlock: IContentBlockProps = {\r\n            title: authorAniTitle,\r\n            level: 0,\r\n            link: authorAniLink,\r\n            content: [\r\n                'CAST uses the following four steps to author chart animations: ',\r\n                {\r\n                    items: [\r\n                        {\r\n                            para: 'Step 1 (Importing)',\r\n                            content: 'Create chart with Charticulator, Vega, or D3, then using our online or your own customized toolkit to generate the DSVG input.'\r\n                        }, {\r\n                            para: 'Step 2 (Selecting)',\r\n                            content: 'Select the smallest mark unit (marks in 1st keyframe) in animation.'\r\n                        }, {\r\n                            para: 'Step 3 (Sequencing)',\r\n                            content: 'Based on the selected mark unit and marks in the chart, select the desired animation sequence.'\r\n                        }, {\r\n                            para: 'Step 4 (Animating)',\r\n                            content: 'Specify timing (duration, delay) and other animation properties(effect, easing) to each mark unit.'\r\n                        }\r\n                    ]\r\n                },\r\n                'Note that step 2 to step 4 can be repeated to create multiple aniunits in order to specify different animations to different marks.'\r\n            ]\r\n        }\r\n        const importBlock: IContentBlockProps = {\r\n            title: importTitle,\r\n            level: 1,\r\n            link: importLink,\r\n            content: ['']\r\n        }\r\n        const chartPrepBlock: IContentBlockProps = {\r\n            title: chartPrepTitle,\r\n            level: 2,\r\n            link: chartPrepLink,\r\n            content: [\r\n                'Our online DSVG generator</a> which can generate DSVG with charts authored from the following tools:',\r\n                {\r\n                    items: [\r\n                        {\r\n                            para: '',\r\n                            content: 'Charticulator (.chart/.tmplt): data file in csv format is also needed when using the templete file as input. '\r\n                        }, {\r\n                            para: '',\r\n                            content: 'Vega (.json)'\r\n                        }, {\r\n                            para: '',\r\n                            content: 'D3 (.svg)'\r\n                        }\r\n                    ]\r\n                },\r\n                'After importing charts, you can edit the class names in the editor panel, or just hit the download button to download the DSVG file.'\r\n            ]\r\n        }\r\n        const loadBlock: IContentBlockProps = {\r\n            title: loadTitle,\r\n            level: 2,\r\n            link: loadLink,\r\n            content: [\r\n                'Click \"Open\" on the navigation bar to :',\r\n                {\r\n                    items: [\r\n                        {\r\n                            para: '',\r\n                            content: 'Load Charts: load one or more DSVG files you just prepared.'\r\n                        }, {\r\n                            para: '',\r\n                            content: 'Load Local Project: load the project you saved on your disk.'\r\n                        }, {\r\n                            para: '',\r\n                            content: 'Load Example Project: load one example in the example list.'\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n        const loadBlock2: IFigLayoutProps = {\r\n            img: loadPng\r\n        }\r\n        const selectBlock: IContentBlockProps = {\r\n            title: selectTitle,\r\n            level: 1,\r\n            link: selectLink,\r\n            content: ['Mark selection is to decide which marks to animate first (which also decides the scale of the mark unit in one aniunit, for example to animate by row)']\r\n        }\r\n        const selectToolBlock: IFigLayoutProps = {\r\n            img: selectToolPng\r\n        }\r\n        const selectToolBlock2: IContentBlockProps = {\r\n            title: selectToolTitle,\r\n            level: 2,\r\n            link: selectToolLink,\r\n            content: [\r\n                'As shown in the figure. There are three ways to select marks in CAST: ',\r\n                {\r\n                    para: 'Selection Tool',\r\n                    content: ''\r\n                }, {\r\n                    type: 'decimal',\r\n                    items: [\r\n                        {\r\n                            para: '',\r\n                            content: 'Select the selection tool from the tool box on the title of the chart panel.'\r\n                        }, {\r\n                            para: '',\r\n                            content: 'By clicking the mark or dragging a rectangular selection on the chart, one or more marks inside the selection border are being selected.The marks unselected will be translucent while the selected ones are shown inside a bounding box with blue borders on mouse up, and the data records corresponding to the selected marks in the Dataset panel will also be highlighted.'\r\n                        }, {\r\n                            para: '',\r\n                            content: 'To select more, click or drag another rectangular selection on the unselected marks.'\r\n                        }, {\r\n                            para: '',\r\n                            content: 'To deselect marks, click or drag rectangular selection on the selected marks.'\r\n                        }\r\n                    ]\r\n                }, {\r\n                    para: 'Lasso Tool',\r\n                    content: ''\r\n                }, {\r\n                    type: 'decimal',\r\n                    items: [\r\n                        {\r\n                            para: '',\r\n                            content: 'Select the lasso tool from the tool box on the title of the chart panel.'\r\n                        }, {\r\n                            para: '',\r\n                            content: 'Position the cursor somewhere outside the marks.'\r\n                        }, {\r\n                            para: '',\r\n                            content: 'Trace around the marks you want to select and capture them to retain in your selection.'\r\n                        }, {\r\n                            para: '',\r\n                            content: 'To select more, just repeat step 2 and step 3 on the unselected marks.'\r\n                        }, {\r\n                            para: '',\r\n                            content: 'To deselect marks, do lasso selection on the selected marks.'\r\n                        }\r\n                    ]\r\n                }, {\r\n                    para: 'Data Table',\r\n                    content: ''\r\n                }, {\r\n                    type: 'decimal',\r\n                    items: [\r\n                        {\r\n                            para: '',\r\n                            content: 'On the Dataset Panel, click the column title to sort the column by this data attribute. If clicking on a non- sorted column, all data records will be sorted in asscending order according to this data attribute; if the column is already sorted, then it will switch to the opposite order(asscending to descending, descending to asscending).'\r\n                        }, {\r\n                            para: '',\r\n                            content: 'Click on the row to select one data record. To select a range, select a row, then with the left mouse button pressed, drag over to other rows.Or use \"Shift + click\" to select non- adjacent rows.Meanwhile the corresponding marks in the chart will be selected.'\r\n                        }, {\r\n                            para: '',\r\n                            content: 'To deselect marks, click or \"click + drag over\" on the selected rows.'\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n        const selSugBlock: IContentBlockProps = {\r\n            title: selSugTitle,\r\n            level: 2,\r\n            link: selSugLink,\r\n            content: ['As shown in the figure in Selection Tools, there is one more button in the toolbox of chart panel. It is used to activate / deactivate the suggestion mode of the selection.When the suggestion mode is activated, the system will automatically select marks from the unselected ones with the same values of the same categorical attributes as those user- selected marks.Here is an example shown below:']\r\n        }\r\n        const selSugBlock2: IFigLayoutProps = {\r\n            img: selSugPng\r\n        }\r\n        const seqBlock: IContentBlockProps = {\r\n            title: seqTitle,\r\n            level: 1,\r\n            link: seqLink,\r\n            content: [\r\n                'There are small plus buttons before keyframe groups who have marks that can be further partitioned into smaller mark units in order to animate them in a more detailed animation sequence.Once the marks are selected in the Chart Panel, drag the selected marks to the Keyframe Panel, and those plus buttons before the keyframe groups who can be further partitioned with the selected marks as one mark unit will be highlighted.Drop the selected marks on one plue button and you will start to create new animation sequence of the marks of the corresponding keyframe group.',\r\n                'An example is shown in the figure below.'\r\n            ]\r\n        }\r\n        const seqBlock2: IFigLayoutProps = {\r\n            img: seqPng\r\n        }\r\n        const aniBlock: IContentBlockProps = {\r\n            title: aniTitle,\r\n            level: 1,\r\n            link: aniLink,\r\n            content: [\r\n                'This step is to bind animation properties to to each keyframe group and keyframe. Including timing properties(duration and delay) and effect properties(effect type and easing)'\r\n            ]\r\n        }\r\n        const timingToKfBlock: IContentBlockProps = {\r\n            title: timingToKfTitle,\r\n            level: 2,\r\n            link: timingToKfLink,\r\n            content: [\r\n                'Each keyframe has a duration bar indicating the duration of the animation of its corrsponding mark unit.Drag the bar on the bottom of the keyframe to add / remove delay or adjust relative timing (start with/after previous). Note that keyframes in the same group should share the same animation property values.Thus to update one keyframe will update all keyframe within the same group.',\r\n                'Drag the right border of the delay/duration bar or enter the exact number in the popup when hovering mouse on the delay / duration bar to adjust the length of the duration or delay.'\r\n            ]\r\n        }\r\n        const timingToKfBlock2: IFigLayoutProps = {\r\n            img: bindKfTimingPng\r\n        }\r\n        const timingToKfBlock3: IFigLayoutProps = {\r\n            img: adjustKfTimingPng\r\n        }\r\n        const timingToKfgBlock: IContentBlockProps = {\r\n            title: timingToKfgTitle,\r\n            level: 2,\r\n            link: timingToKfgLink,\r\n            content: [\r\n                'The duration of each keyframe group is determined by the total duration of the keyframes within it. Thus we can only specify delay and relative timing bewteen keyframe groups.'\r\n            ]\r\n        }\r\n        const timingToKfgBlock2: IFigLayoutProps = {\r\n            img: bindKfgTimingPng\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Nav activeTab='tutorial' />\r\n                <div className='container'>\r\n                    <div className='tutorial-wrapper'>\r\n                        <SideMenu menuContent={menuContent} />\r\n                        <div className='content-wrapper'>\r\n                            <ContentBlock title={overviewBlock.title} level={overviewBlock.level} link={overviewBlock.link} content={overviewBlock.content} />\r\n                            <ContentBlock title={visLangBlock.title} level={visLangBlock.level} link={visLangBlock.link} content={visLangBlock.content} />\r\n                            <ContentBlock title={kfBlock.title} level={kfBlock.level} link={kfBlock.link} content={kfBlock.content} />\r\n                            <FigWithCap img={kfIllusBlock.img} cap={kfIllusBlock.cap} />\r\n                            <FigLayout img={kfIllusBlock2.img} />\r\n                            <ContentBlock title={kfgBlock.title} level={kfgBlock.level} link={kfgBlock.link} content={kfgBlock.content} />\r\n                            <FigLayout img={kfgIllusBlock.img} />\r\n                            <ContentBlock title={symbolBlock.title} level={symbolBlock.level} link={symbolBlock.link} content={symbolBlock.content} />\r\n                            <FigLayout img={symbolBlock2.img} />\r\n                            <ContentBlock title={rTimingBlock.title} level={rTimingBlock.level} link={rTimingBlock.link} content={rTimingBlock.content} />\r\n                            <ContentBlock title={kfTimingBlock.title} level={kfTimingBlock.level} link={kfTimingBlock.link} content={kfTimingBlock.content} />\r\n                            <FigLayout img={kfTimingBlock2.img} />\r\n                            <ContentBlock title={kfgTimingBlock.title} level={kfgTimingBlock.level} link={kfgTimingBlock.link} content={kfgTimingBlock.content} />\r\n                            <FigLayout img={kfgTimingBlock2.img} />\r\n                            <ContentBlock title={aniunitTimingBlock.title} level={aniunitTimingBlock.level} link={aniunitTimingBlock.link} content={aniunitTimingBlock.content} />\r\n                            <FigLayout img={aniunitTimingBlock2.img} />\r\n                            <ContentBlock title={uiBlock.title} level={uiBlock.level} link={uiBlock.link} content={uiBlock.content} />\r\n                            <FigLayout img={uiBlock2.img} />\r\n                            <ContentBlock title={authorAniBlock.title} level={authorAniBlock.level} link={authorAniBlock.link} content={authorAniBlock.content} />\r\n                            <ContentBlock title={importBlock.title} level={importBlock.level} link={importBlock.link} content={importBlock.content} />\r\n                            <ContentBlock title={chartPrepBlock.title} level={chartPrepBlock.level} link={chartPrepBlock.link} content={chartPrepBlock.content} />\r\n                            <ContentBlock title={loadBlock.title} level={loadBlock.level} link={loadBlock.link} content={loadBlock.content} />\r\n                            <FigLayout img={loadBlock2.img} />\r\n                            <ContentBlock title={selectBlock.title} level={selectBlock.level} link={selectBlock.link} content={selectBlock.content} />\r\n                            <FigLayout img={selectToolBlock.img} />\r\n                            <ContentBlock title={selectToolBlock2.title} level={selectToolBlock2.level} link={selectToolBlock2.link} content={selectToolBlock2.content} />\r\n                            <ContentBlock title={selSugBlock.title} level={selSugBlock.level} link={selSugBlock.link} content={selSugBlock.content} />\r\n                            <FigLayout img={selSugBlock2.img} />\r\n                            <ContentBlock title={seqBlock.title} level={seqBlock.level} link={seqBlock.link} content={seqBlock.content} />\r\n                            <FigLayout img={seqBlock2.img} />\r\n                            <ContentBlock title={aniBlock.title} level={aniBlock.level} link={aniBlock.link} content={aniBlock.content} />\r\n                            <ContentBlock title={timingToKfBlock.title} level={timingToKfBlock.level} link={timingToKfBlock.link} content={timingToKfBlock.content} />\r\n                            <FigLayout img={timingToKfBlock2.img} />\r\n                            <FigLayout img={timingToKfBlock3.img} />\r\n                            <ContentBlock title={timingToKfgBlock.title} level={timingToKfgBlock.level} link={timingToKfgBlock.link} content={timingToKfgBlock.content} />\r\n                            <FigLayout img={timingToKfgBlock2.img} />\r\n                            <a href=\"test\" >Michael</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}","import '../../assets/style/fig-txt-card.scss'\r\nimport React from 'react'\r\n\r\nexport interface IFigTxtCardProps {\r\n    imgCls: string\r\n    title: string\r\n    content: string\r\n}\r\n\r\nexport class FigTxtCard extends React.Component<IFigTxtCardProps> {\r\n    render() {\r\n        return (\r\n            <div className='card-item'>\r\n                <div className={`card-img ${this.props.imgCls}`}></div>\r\n                <h4>{this.props.title}</h4>\r\n                <p>{this.props.content}</p>\r\n            </div>\r\n        );\r\n    }\r\n}","import '../../assets/style/people-list.scss'\r\nimport React from 'react'\r\nimport { FigTxtCard, IFigTxtCardProps } from './figTxtCard';\r\n\r\nexport default class PeopleList extends React.Component<{ peopleInfos: IFigTxtCardProps[] }> {\r\n    render() {\r\n        const pList: JSX.Element[] = this.props.peopleInfos.map((pProps: IFigTxtCardProps) => <FigTxtCard imgCls={pProps.imgCls} title={pProps.title} content={pProps.content} />)\r\n        return (\r\n            <div className='people-wrapper'>\r\n                <h2>People</h2>\r\n                {pList}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react'\r\n\r\nimport Nav from '../layout/nav'\r\nimport Footer from '../layout/footer'\r\nimport PeopleList from '../layout/peopleList'\r\n\r\nexport default class About extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Nav activeTab='about' />\r\n                <div className='container'>\r\n                    <PeopleList peopleInfos={[\r\n                        {\r\n                            imgCls: 'tge',\r\n                            title: 'Tong Ge',\r\n                            content: 'Shandong University'\r\n                        }, {\r\n                            imgCls: 'bl',\r\n                            title: 'Bongshin Lee',\r\n                            content: 'Microsoft Research'\r\n                        }, {\r\n                            imgCls: 'bqc',\r\n                            title: 'Baoquan Chen',\r\n                            content: 'Peking University'\r\n                        }, {\r\n                            imgCls: 'yhw',\r\n                            title: 'Yunhai Wang',\r\n                            content: 'Shandong University'\r\n                        }\r\n                    ]} />\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class GalleryDetail extends React.Component<{ match: any }> {\r\n    render() {\r\n        return (\r\n            <div>{this.props.match.params.name}</div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { HashRouter, Route, Switch } from 'react-router-dom'\r\nimport Home from './pages/home'\r\nimport Gallery from './pages/gallery'\r\nimport Tutorial from './pages/tutorial'\r\nimport About from './pages/about'\r\nimport GalleryDetail from './pages/galleryDetail'\r\n\r\nconst BasicRoute = () => {\r\n    return (\r\n        <HashRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route exact path=\"/gallery\" component={Gallery} />\r\n                <Route exact path=\"/tutorial\" component={Tutorial} />\r\n                <Route exact path=\"/about\" component={About} />\r\n                <Route exact path=\"/gallery-detail/:name\" component={GalleryDetail} />\r\n            </Switch>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default BasicRoute;","import './assets/style/app.scss';\nimport React from 'react';\nimport BasicRoute from './components/router'\n\nexport default class App extends React.Component {\n    render() {\n        return (\n            <BasicRoute />\n        )\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/UIComponent.a6225797.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.02a28cbe.png\";","module.exports = __webpack_public_path__ + \"static/media/feature1.9801a224.png\";","module.exports = __webpack_public_path__ + \"static/media/feature2.10761139.png\";","module.exports = __webpack_public_path__ + \"static/media/feature3.52ee1055.png\";","module.exports = __webpack_public_path__ + \"static/media/kf_illus.901edccd.gif\";","module.exports = __webpack_public_path__ + \"static/media/kf_illus.8a10582b.png\";","module.exports = __webpack_public_path__ + \"static/media/kfGroup.660a6052.png\";","module.exports = __webpack_public_path__ + \"static/media/icons.87dfc291.png\";","module.exports = __webpack_public_path__ + \"static/media/kf_relation.be75777f.png\";","module.exports = __webpack_public_path__ + \"static/media/kfgroup_relation.eda96ed0.png\";","module.exports = __webpack_public_path__ + \"static/media/kf_align.a075d98c.png\";","module.exports = __webpack_public_path__ + \"static/media/nav.9eed82df.png\";","module.exports = __webpack_public_path__ + \"static/media/selection.63dd7904.png\";","module.exports = __webpack_public_path__ + \"static/media/suggestion.52b1b486.png\";","module.exports = __webpack_public_path__ + \"static/media/kf_suggestion.11e10b81.png\";","module.exports = __webpack_public_path__ + \"static/media/bind_kf_timing.2b172463.png\";","module.exports = __webpack_public_path__ + \"static/media/adjust_timing.b6ceaaf7.png\";","module.exports = __webpack_public_path__ + \"static/media/bind_kfg_timing.46bb7609.png\";"],"sourceRoot":""}